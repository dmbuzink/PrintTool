name: Build Printtool
on: 
  schedule:
    - cron:  '0 0 * * 3'
  push:
    paths-ignore:
      - .azure-pipelines/**
      - .devcontainer/**
      - .vscode/**
      - .github/workflows/refactored.yml
  workflow_dispatch:
  pull_request:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #Specifies whether .NET welcome and telemetry messages are displayed on the first run.
  DOTNET_NOLOGO: true
  #Specifies whether to generate an ASP.NET Core certificate.
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  NUGET_PACKAGES: '${{github.workspace}}/.nuget/packages'
  BUILD_CONFIG: 'Release'
  BUILD_ARCHITECTURE: 'x64'
  SHOULD_SKIP_LINUX: false

defaults:
  run:
    shell: pwsh
    
jobs:
  build_windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4   
        name: Checkout
      - id: windows-builder
        uses: ./.github/build-windows
        name: 'Build for windows'
        with:
          BUILD_CONFIG: ${{env.BUILD_CONFIG}}
          BUILD_ARCHITECTURE: ${{env.BUILD_ARCHITECTURE}}
  build_linux:
    name: Build for Linux
    if: ${{ !vars.SHOULD_SKIP_LINUX }}
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v4   
        name: Checkout
      - id: linux-builder
        uses: ./.github/build-linux
        name: 'Build for Linux'
        with:
          BUILD_CONFIG: ${{env.BUILD_CONFIG}}
          BUILD_ARCHITECTURE: ${{env.BUILD_ARCHITECTURE}}
  deploy_windows:
    name: Deploy for Windows
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: windows-latest
    needs: [build_windows]
    environment: printool_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: PrintToolWindows
          path: ${{github.workspace}}/artifacts
      - run: ${{github.workspace}}/artifacts/PrintTool.exe "Hello" "world" "windows"
        name: Run print tool
  deploy_linux:
    name: Deploy for Linux
    if: ${{ !vars.SHOULD_SKIP_LINUX && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [build_linux]
    environment: printool_linux
    steps:
      - id: deploy-linux
        uses: ./.github/deploy-linux
        name: 'Deploy linux'
