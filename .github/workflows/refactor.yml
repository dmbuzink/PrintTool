name: Build Printtool
on: 
  schedule:
    - cron:  '0 0 * * 3'
  push:
    paths-ignore:
      - .azure-pipelines/**
      - .devcontainer/**
      - .vscode/**
      - .github/workflows/refactored.yml
  workflow_dispatch:
  pull_request:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  #Specifies whether .NET welcome and telemetry messages are displayed on the first run.
  DOTNET_NOLOGO: true
  #Specifies whether to generate an ASP.NET Core certificate.
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  NUGET_PACKAGES: '${{github.workspace}}/.nuget/packages'
  BUILD_CONFIG: 'Release'
  BUILD_ARCHITECTURE: 'x64'
  SHOULD_SKIP_LINUX: true

defaults:
  run:
    shell: pwsh
    
jobs:
  build_windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - id: windows-builder
        uses: '../.github/actions/action.yml'
        with:
          BUILD_CONFIG: ${{env.BUILD_CONFIG}}
          BUILD_ARCHITECTURE: ${{env.BUILD_ARCHITECTURE}}
  build_linux:
    name: Build for Linux
    if: ${{ !vars.SHOULD_SKIP_LINUX }}
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v4   
      name: Checkout
    - uses: actions/setup-dotnet@v4
      name: Set up dotnet
    - run: dotnet restore --locked-mode
      name: Restore packages
    - run: dotnet build ${{github.workspace}}/PrintTool/PrintTool.csproj --no-restore -c ${{ env.BUILD_CONFIG }} -a ${{ env.BUILD_ARCHITECTURE}}
      name: Build project for release
    - run: dotnet build ${{github.workspace}}/PrintTool.UnitTests/PrintTool.UnitTests.csproj --no-restore -c ${{ env.BUILD_CONFIG }} -a ${{ env.BUILD_ARCHITECTURE}}
      name: Build test project
    - run: dotnet test ${{github.workspace}}/PrintTool.UnitTests/PrintTool.UnitTests.csproj --no-restore -c ${{ env.BUILD_CONFIG }} -a ${{ env.BUILD_ARCHITECTURE}}
      name: Run unit tests
    - run: dotnet publish ${{github.workspace}}/PrintTool/PrintTool.csproj -a x64 --output ${{github.workspace}}/artifacts/PrintToolLinux --no-restore -c ${{ env.BUILD_CONFIG }}
      name: Publish project and upload to artifact
    - uses: actions/upload-artifact@v4
      with:
        name: PrintToolLinux
        path: '${{github.workspace}}/artifacts/PrintToolLinux'
  deploy_windows:
    name: Deploy for Windows
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: windows-latest
    needs: [build_windows]
    environment: printool_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: PrintToolWindows
          path: ${{github.workspace}}/artifacts
      - run: ${{github.workspace}}/artifacts/PrintTool.exe "Hello" "world" "windows"
        name: Run print tool
  deploy_linux:
    name: Deploy for Linux
    if: ${{ !vars.SHOULD_SKIP_LINUX && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [build_linux]
    environment: printool_linux
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: PrintToolLinux
          path: ${{github.workspace}}/artifacts
      - run: chmod 777 ${{github.workspace}}/artifacts/PrintTool
        name: Giving permissions to project folder
      - run: ${{github.workspace}}/artifacts/PrintTool "Hello" "world" "linux"
        name: Run print tool
